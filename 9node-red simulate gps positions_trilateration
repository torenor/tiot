[{«id»:»6fdd240c5bc2b375″,»type»:»inject»,»z»:»4db8466d6f729d2d»,»name»:»simulate 2 gateways»,»props»:[{«p»:»payload»},{«p»:»topic»,»vt»:»str»}],»repeat»:»»,»crontab»:»»,»once»:false,»onceDelay»:0.1,»topic»:»»,»payload»:»{\»app_id\»:\»tnlpptest01\»,\»dev_id\»:\»tnlpptest99\»,\»hardware_serial\»:\»00F4GF18EC03B1EF\»,\»port\»:1,\»counter\»:82,\»payload_raw\»:\»BQIAkA==\»,\»payload_fields\»:{\»analog_in_5\»:4},\»metadata\»:{\»time\»:\»2020-09-13T15:39:23.491304061Z\»,\»frequency\»:868.3,\»modulation\»:\»LORA\»,\»data_rate\»:\»SF7BW125\»,\»airtime\»:51456000,\»coding_rate\»:\»4/5\»,\»gateways\»:[{\»gtw_id\»:\»drone-01\»,\»timestamp\»:3662634707,\»time\»:\»2020-09-13T15:39:22.462864Z\»,\»channel\»:1,\»rssi\»:-41,\»snr\»:4,\»rf_chain\»:0,\»latitude\»:63.4262363,\»longitude\»:10.693831,\»altitude\»:150},{\»gtw_id\»:\»drone-02\»,\»timestamp\»:3662634707,\»time\»:\»2020-09-13T15:39:22.462864Z\»,\»channel\»:1,\»rssi\»:-91,\»snr\»:5,\»rf_chain\»:0,\»latitude\»:63.35171,\»longitude\»:10.727022,\»altitude\»:90}]}}»,»payloadType»:»json»,»x»:150,»y»:360,»wires»:[[«3782c90ee505e5f8»]]},{«id»:»3782c90ee505e5f8″,»type»:»json»,»z»:»4db8466d6f729d2d»,»name»:»»,»property»:»payload»,»action»:»obj»,»pretty»:false,»x»:170,»y»:440,»wires»:[[«f29db412a9a1f497»]]},{«id»:»f29db412a9a1f497″,»type»:»switch»,»z»:»4db8466d6f729d2d»,»name»:»»,»property»:»msg.payload.metadata.gateways.length»,»propertyType»:»msg»,»rules»:[{«t»:»eq»,»v»:»1″,»vt»:»num»},{«t»:»eq»,»v»:»2″,»vt»:»num»},{«t»:»gt»,»v»:»2″,»vt»:»num»}],»checkall»:»false»,»repair»:false,»outputs»:3,»x»:330,»y»:440,»wires»:[[],[«a623326947ccd66c»],[«2a4768bb01fc29a3»]]},{«id»:»6ac12f999db73576″,»type»:»json»,»z»:»4db8466d6f729d2d»,»name»:»»,»property»:»payload»,»action»:»obj»,»pretty»:false,»x»:1090,»y»:540,»wires»:[[«63d02b817ac75863»]]},{«id»:»b4cfb82a0a7f0869″,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»calculate input data»,»func»:»//org: var gw0_gtw_id = msg.payload.metadata.gateways[0].gtw_id;\n\n//GW kommer sorter på latitude, dvs. fra nord til sør\n\n// gw1\nvar gw0_gtw_id = msg.payload[0].gtw_id;\nvar gw0lat = msg.payload[0].latitude; // + Math.random() * 0,7;\n//gw0lat = gw0lat + Math.random() * 0.09;\nvar gw0lon = msg.payload[0].longitude; // + Math.random() * 0,7;;\n//gw0lon = gw0lon + Math.random() * 0.09;\nvar gw0alt = msg.payload[0].altitude;\nvar gw0rssi = msg.payload[0].rssi;\n//gw0rssi = Math.trunc(gw0rssi + Math.random() * 1.13);\nvar gw0snr = msg.payload[0].snr;\n\n// gw2\nvar gw1_gtw_id = msg.payload[1].gtw_id;\nvar gw1lat = msg.payload[1].latitude; // + Math.random() * 0,7;;\n//gw1lat = gw1lat + Math.random() * 0.09;\nvar gw1lon = msg.payload[1].longitude; // + Math.random() * 0,7;;\n//gw1lon = gw1lon + Math.random() * 0.09;\nvar gw1alt = msg.payload[1].altitude;\nvar gw1rssi = msg.payload[1].rssi;\n//gw1rssi = Math.trunc(gw1rssi + Math.random() * 1.133);\nvar gw1snr = msg.payload[1].snr;\n\n\n\n/\n beregne distanse i km\n/\nfunction computeDistance([prevLat, prevLon], [lat, lon]) {\n const prevLatInRad = toRad(prevLat);\n const prevLonInRad = toRad(prevLon);\n const latInRad = toRad(lat);\n const lonInRad = toRad(lon);\n\n return (\n // In kilometers\n 6377.830272 *\n Math.acos(\n Math.sin(prevLatInRad) * Math.sin(latInRad) +\n Math.cos(prevLatInRad) * Math.cos(latInRad) * Math.cos(lonInRad – prevLonInRad),\n )\n );\n}\n// #### S L U T T\n\n\n\n// ############################################################################\n// ############################################################################\nfunction bestRssi(rssi_1, rssi_2){\nconst numbers = {\n gw0rssi: rssi_1,\n gw1rssi: rssi_2,\n \n}\n\nconst [label, value] = Object.entries(numbers).reduce((a, b) => a[1] > b[1] ? a : b)\nreturn label\n\n}\n// #### S L U T T\n\n\n\n\n/\n returnere antall angle degreee mellom to gps punkter\n/\nfunction angleFromCoordinate(lat1,lon1,lat2,lon2) {\n var p1 = {\n x: lat1,\n y: lon1\n };\n\n var p2 = {\n x: lat2,\n y: lon2\n };\n // angle in radians\n var angleRadians = Math.atan2(p2.y – p1.y, p2.x – p1.x);\n // angle in degrees\n var angleDeg = Math.atan2(p2.y – p1.y, p2.x – p1.x) * 180 / Math.PI;\n\n //document.getElementById(‘rotation’).innerHTML =\»Rotation : \»+ angleDeg;\n return angleDeg;\n \n}\n// #### S L U T T\n\n\n\n// ############################################################################\n// ############################################################################\nfunction toRad(angle) {\n return (angle * Math.PI) / 180;\n}\n\n// #### S L U T T\n\n\nvar arr1 = [gw0lat, gw0lon];\nvar arr2 = [gw1lat, gw1lon];\nvar distanse = computeDistance(arr1, arr2); //beregne distanse i km mellom de 2 gw’ene\n\n\nvar latkorreksjon_gw0;\nvar lonkorreksjon_gw0;\n\nvar latkorreksjon_gw1;\nvar lonkorreksjon_gw1;\n\n//var lat0 = 63.41171;\n//var lon0 = 10.693831;\n//var lat1 = 63.42171;\n//var lon1 = 10.767022;\nvar latsum = gw0lat – gw1lat; //nord-sør\nvar lonsum = gw0lon – gw1lon; //vest-øst\n//var latres;\n\n\n\n/* \n LAT-TESTING\n*/\n// gw0\nif ((latsum > 0.01) || (latsum < -0.01)) {\n\t//latres = \»ingen lat korreksjon\»;\n\t//lonres = \»ingen lon korreksjon\»; \n\n\t\n switch(true)\n {\n case ((gw0rssi >= -1000) && (gw0rssi <= -100)):\n latkorreksjon_gw0 = (distanse * 0.25/100); //0.025;;0.1;\n\t\t\tbreak;\n case ((gw0rssi >= -99) && (gw0rssi <= -80)):\n latkorreksjon_gw0 = (distanse * 0.4/100); //0.025;\n\t\t\tbreak;\n case ((gw0rssi >= -79) && (gw0rssi <= -50)):\n latkorreksjon_gw0 = (distanse * 0.7/100);//0.009;\n\t\t\tbreak;\n case ((gw0rssi >= -49) && (gw0rssi <= 0)):\n latkorreksjon_gw0 = (distanse * 0.85/100); // 85%\n\t\t\tbreak;\n\t\tdefault:\t\n latkorreksjon_gw0 = 0;\n break;\n\n }\n} \n\n// gw1\nif ((latsum > 0.01) || (latsum < -0.01)) {\n\t//latres = \»ingen lat korreksjon\»;\n\t//lonres = \»ingen lon korreksjon\»; \t\n\t switch(true)\n {\n case ((gw1rssi >= -1000) && (gw1rssi <= -100)):\n latkorreksjon_gw1 = (distanse * 0.25/100); //0.025;;0.1;\n\t\t\tbreak;\n case ((gw1rssi >= -99) && (gw1rssi <= -80)):\n latkorreksjon_gw1 = (distanse * 0.4/100); //0.025;\n\t\t\tbreak;\n case ((gw1rssi >= -79) && (gw1rssi <= -50)):\n latkorreksjon_gw1 = (distanse * 0.7/100);//0.009;\n //msg.topic = \»rssi mellom -79 og -50\»;\n\t\t\tbreak;\n case ((gw1rssi >= -49) && (gw1rssi <= 0)):\n latkorreksjon_gw1 = (distanse * 0.85/100); // 85%\n\t\t\tbreak;\n\t\tdefault:\t\n latkorreksjon_gw1 = 0;\n break;\n\n }\n} \n// #### S L U T T\n\n// ################### LON-TESTING ###########################\nif ((lonsum > 0.01) || (lonsum < -0.01)) {\n\t//latres = \»ingen lat korreksjon\»;\n\t//lonres = \»ingen lon korreksjon\»; \n\n\t\n switch(true)\n {\n case ((gw0rssi >= -1000) && (gw0rssi <= -100)):\n lonkorreksjon_gw0 = (distanse * 0.25/100); //0.025;;0.1;\n\t\t\tbreak;\n case ((gw0rssi >= -99) && (gw0rssi <= -80)):\n lonkorreksjon_gw0 = (distanse * 0.4/100); //0.025;;0.1;\n\t\t\tbreak;\n case ((gw0rssi >= -79) && (gw0rssi <= -50)):\n lonkorreksjon_gw0 = (distanse * 0.7/100); //0.025;;0.1;\n\t\t\tbreak;\n case ((gw0rssi >= -49) && (gw0rssi <= 0)):\n lonkorreksjon_gw0 = (distanse * 0.85/100); //0.025;;0.1;\n\t\t\tbreak;\n\t\tdefault:\t\n break;\n\n }\n\t\n\t switch(true)\n {\n case ((gw1rssi >= -1000) && (gw1rssi <= -100)):\n lonkorreksjon_gw1 = (distanse * 0.25/100); //0.025;;0.1;\n\t\t\tbreak;\n case ((gw1rssi >= -99) && (gw1rssi <= -80)):\n lonkorreksjon_gw1 = (distanse * 0.4/100); //0.025;;0.1;\n\t\t\tbreak;\n case ((gw1rssi >= -79) && (gw1rssi <= -50)):\n lonkorreksjon_gw1 =(distanse * 0.7/100); //0.025;;0.1;\n\t\t\tbreak;\n case ((gw1rssi >= -49) && (gw1rssi <= 0)):\n lonkorreksjon_gw1 =(distanse * 0.85/100); //0.025;;0.1;\n\t\t\tbreak;\n\t\tdefault:\t\n\t\t \n break;\n\n }\n} else {\n lonkorreksjon_gw0 = 0;\n lonkorreksjon_gw1 = 0;\n //console.log(\»Ikke behov for å korrigere, siden differanse på lat0 -lat1 og lon0 og lon1 ikke er over 0.02, dvs. ca 2,2 km\»);\n} \n// #### S L U T T\n\n\n\n\nvar o = {} // empty Object\n//var key = ‘gps-data’;\nvar key = »;\n//o[key] = []; // empty Array, which you can push() values into\no = []; // empty Array, which you can push() values i\n\n\n\nvar lat01 = gw0lat; // + Math.random() * 0.7;\nvar lon01 = gw0lon; // + Math.random() * 0.7;\nvar lat02 = gw1lat; // + Math.random() * 0.7;\nvar lon02 = gw1lon; // + Math.random() * 0.7;\n//var lonres;\nlet angledegree = Math.trunc(angleFromCoordinate(gw0lat,gw0lon,gw1lat,gw1lon));\n\n\nlet beste_rssi = bestRssi(gw0rssi, gw1rssi);\nmsg.topic = distanse;\n\n/\n sjekke beste rssi og tilpasse korreksjon mht bearing angle\n/\n\nif (beste_rssi == \»gw0rssi\») {\n\t//latres = \»ingen lat korreksjon\»;\n\t//lonres = \»ingen lon korreksjon\»; \n\n\t\n switch(true)\n {\n case ((angledegree >= 0) && (angledegree <= 45 )):\n lat01 = lat01 + (latkorreksjon_gw0 * 0.9);\n lon01 = lon01 + (latkorreksjon_gw0 * 0.9);\n //msg.topic = \»sjekk-gw0\»;\n\t\t\tbreak;\n case ((angledegree >= 46) && (angledegree <= 90)):\n lat01 = lat01 – (latkorreksjon_gw0 * 0.9);\n lon01 = lon01 – lonkorreksjon_gw0;\n\t\t\tbreak;\n case ((angledegree >= 91) && (angledegree <= 180)):\n lat01 = lat01 + (latkorreksjon_gw0 * 0.9);\n lon01 = lon01 + (lonkorreksjon_gw0 * 0.5);\n\t\t\tbreak;\n case ((angledegree >= -91) && (angledegree <= -179)):\n lat01 = lat01 – latkorreksjon_gw0;\n lon01 = lon01 – 0;\n break;\n case ((angledegree >= -90) && (angledegree <= 0)):\n lat01 = lat01 + (latkorreksjon_gw0 * 0.5);\n lon01 = lon01 – (lonkorreksjon_gw0 * 0.5); \n //msg.topic = \»dette er verdien på latkorreksjongw0: \» + latkorreksjon_gw0;\n\t\t\tbreak;\n\t\tdefault:\t\n break;\n\n }\n}\n\n\nif (beste_rssi == \»gw1rssi\») {\n\t//latres = \»ingen lat korreksjon\»;\n\t//lonres = \»ingen lon korreksjon\»; \t\n\t switch(true)\n {\n case ((angledegree >= 0) && (angledegree <= 45 )):\n lat02 = lat02 + latkorreksjon_gw1; //(distanse * 0.85/100); //latkorreksjon_gw1;\n lon02 = lon02 + 0;\n //msg.topic = distanse;\n\t\t\tbreak;\n case ((angledegree >= 46) && (angledegree <= 90)):\n lat02 = lat02 + 0 ; //latkorreksjon_gw1;\n lon02 = lon02 + lonkorreksjon_gw1;\n\t\t\tbreak;\n case ((angledegree >= 91) && (angledegree <= 180)):\n lat02 = lat02 – latkorreksjon_gw1;\n lon02 = lon02 + (lonkorreksjon_gw1 * 0.5);\n \n\t\t\tbreak;\n case ((angledegree >= -91) && (angledegree <= -179)):\n lat02 = lat02 + latkorreksjon_gw1;\n lon02 = lon02 + (lonkorreksjon_gw1 * 0.5);\n \n\t\t\tbreak;\n\t\tcase ((angledegree >= -90) && (angledegree <= 0)):\n lat02 = lat02 + (latkorreksjon_gw1 * 0.5);\n lon02 = lon02 – (lonkorreksjon_gw1 * 0.5); \n //msg.topic = \»treffher: \» + latkorreksjon_gw1;\n\t\t\tbreak;\t\n\t\tdefault:\t\n break;\n\n }\n}\n\n\n\n\n\n//bygg array\n\nvar data = {\n gwid: gw0_gtw_id,\n latitude: lat01,\n longitude: lon01,\n gw0lat: gw0lat,\n gw0lon: gw0lon,\n distanse: distanse,\n rssi: gw0rssi,\n angle: angledegree,\n latkorreksjon: latkorreksjon_gw0,\n lonkorreksjon: lonkorreksjon_gw0\n \n};\nvar data2 = {\n gwid: gw1_gtw_id,\n latitude: lat02,\n longitude: lon02,\n gw1lat: gw1lat,\n gw1lon: gw1lon,\n distanse: distanse,\n rssi: gw1rssi,\n angle: angledegree,\n latkorreksjon: latkorreksjon_gw1,\n lonkorreksjon: lonkorreksjon_gw1\n};\n\n/\nvar data3 = {\n latitude: lat03,\n longitude: lon03\n};\n/\n\no.push(data);\no.push(data2);\n//o.push(data3);\n\nmsg.payload = o;\n\nreturn msg;\n\n\n»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:550,»y»:360,»wires»:[[«4e8ab129ede2d0c1″,»1d9e496be7113c8d»,»114823f0158407a0″,»bff49b98112f9692″]]},{«id»:»63d02b817ac75863″,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»person»,»func»:»\n\n\nmsg.payload = { name: \»person1\»,\n layer: \»realtime2\»,\n lat: msg.payload.latitude,\n lon: msg.payload.longitude,\n icon: \»fa-circle\»,\n iconColor: \»red\»,\n \n };\nreturn msg;\n»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:1070,»y»:380,»wires»:[[«73c39d708c307235»]]},{«id»:»114823f0158407a0″,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»gw1″,»func»:»\n\n\nmsg.payload = { name: \»drone-red1\»,\n layer: \»realtime2\»,\n lat: msg.payload[1].gw1lat,\n lon: msg.payload[1].gw1lon,\n id: msg.payload[1].gwid,\n rssi: msg.payload[1].rssi,\n lonkorr: msg.payload[1].lonkorreksjon_gw0,\n iconColor: \»red\»,\n icon: \»helicopter\»,\n distanse: msg.payload[1].distanse\n };\nreturn msg;\n\n\n»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:870,»y»:280,»wires»:[[«73c39d708c307235»]]},{«id»:»1d9e496be7113c8d»,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»gw2″,»func»:»\n\n\nmsg.payload = { name: \»drone-red2\»,\n layer: \»realtime2\»,\n lat: msg.payload[0].gw0lat,\n lon: msg.payload[0].gw0lon,\n id: msg.payload[0].gwid,\n rssi: msg.payload[0].rssi,\n iconColor: \»red\»,\n icon: \»helicopter\»,\n distanse: msg.payload[0].distanse\n };\nreturn msg;»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:870,»y»:320,»wires»:[[«73c39d708c307235»]]},{«id»:»a623326947ccd66c»,»type»:»change»,»z»:»4db8466d6f729d2d»,»name»:»sort lat north2south»,»rules»:[{«t»:»set»,»p»:»payload»,»pt»:»msg»,»to»:»payload.metadata.gateways»,»tot»:»jsonata»},{«t»:»set»,»p»:»payload»,»pt»:»msg»,»to»:»payload^(latitude)»,»tot»:»jsonata»}],»action»:»»,»property»:»»,»from»:»»,»to»:»»,»reg»:false,»x»:510,»y»:440,»wires»:[[«b4cfb82a0a7f0869»]]},{«id»:»2a4768bb01fc29a3″,»type»:»change»,»z»:»4db8466d6f729d2d»,»name»:»»,»rules»:[{«t»:»set»,»p»:»payload»,»pt»:»msg»,»to»:»payload.metadata.gateways»,»tot»:»jsonata»},{«t»:»set»,»p»:»payload»,»pt»:»msg»,»to»:»payload^(metadata.gateways.rssi)»,»tot»:»jsonata»}],»action»:»»,»property»:»»,»from»:»»,»to»:»»,»reg»:false,»x»:220,»y»:540,»wires»:[[«aca093e05933c20e»]]},{«id»:»aca093e05933c20e»,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»correct position based on RSSI»,»func»:»// gw1\nvar gw0_gtw_id = msg.payload[0].gtw_id;\nvar gw0lat = msg.payload[0].latitude;\nvar gw0lon = msg.payload[0].longitude;\nvar gw0alt = msg.payload[0].altitude;\nvar gw0rssi = msg.payload[0].rssi;\nvar gw0snr = msg.payload[0].snr;\n\n// gw2\nvar gw1_gtw_id = msg.payload[1].gtw_id;\nvar gw1lat = msg.payload[1].latitude;\nvar gw1lon = msg.payload[1].longitude;\nvar gw1alt = msg.payload[1].altitude;\nvar gw1rssi = msg.payload[1].rssi;\nvar gw1snr = msg.payload[1].snr;\n\n// gw3\nvar gw2_gtw_id = msg.payload[2].gtw_id;\nvar gw2lat = msg.payload[2].latitude;\nvar gw2lon = msg.payload[2].longitude;\nvar gw2alt = msg.payload[2].altitude;\nvar gw2rssi = msg.payload[2].rssi;\nvar gw2snr = msg.payload[2].snr;\n\n// var lat02 = 63.404705 + Math.random() * 0.0023;\n//var lon02 = 10.728103 + Math.random() * 0.0023;\n\n\nvar o = {} // empty Object\n//var key = ‘gps-data’;\nvar key = »;\n//o[key] = []; // empty Array, which you can push() values into\no = []; // empty Array, which you can push() values i\n\n\n\nvar lat01 = gw0lat; // + Math.random() * 0.01069;\nvar lon01 = gw0lon; //+ Math.random() * 0.01069;\n\n\n// : 63.404705, 10.728103\nvar lat02 = gw1lat; // + Math.random() * 0.01069;\nvar lon02 = gw1lon; // + Math.random() * 0.01069;\n\n// 63.393175, 10.764243\nvar lat03 = gw2lat;// + Math.random() * 0.01069;\nvar lon03 = gw2lon; // + Math.random() * 0.01069;\n\nvar r1 = 0;\nvar r2 = 0;\nvar r3 = 0;\nvar r4 = 0;\nvar r5 = 0;\nvar r6 = 0;\n\n\n switch(true)\n {\n case ((gw1rssi >= -160) && (gw1rssi <= -100)):\n r3 = 0.04;\n r4 = 0.04;\n break;\n case ((gw1rssi >= -99) && (gw1rssi <= -80)):\n r3 = 0.025;\n r4 = 0.025;\n break;\n case ((gw1rssi >= -79) && (gw1rssi <= -50)):\n r3 = 0.009;\n r4 = 0.009;\n break;\n case ((gw1rssi >= -49) && (gw1rssi <= 0)):\n r3 = 0;\n r4 = 0;\n break;\n\n }\n\n\n switch(true)\n {\n case ((gw2rssi >= -160) && (gw2rssi <= -100)):\n r5 = 0.06;\n r6 = 0.06;\n break;\n case ((gw2rssi >= -99) && (gw2rssi <= -80)):\n r5 = 0.05;\n r6 = 0.05;\n break;\n case ((gw2rssi >= -79) && (gw2rssi <= -50)):\n r5 = 0.01;\n r6 = 0.01;\n break;\n case ((gw2rssi >= -49) && (gw2rssi <= 0)):\n r5 = 0;\n r6 = 0;\n break;\n\n }\n\n\n\n\n//bygg array\n\nvar data = {\n latitude: lat01,\n longitude: lon01 -r2,\n r1: r1,\n r2: r2\n};\nvar data2 = {\n latitude: lat02 – r3,\n longitude: lon02 -r4,\n r3: r3,\n r4: r4\n};\n\nvar data3 = {\n latitude: lat03 – r5,\n longitude: lon03 – r6,\n r5: r5,\n r6: r6\n};\n\no.push(data);\no.push(data2);\no.push(data3);\n\nmsg.payload = o;\n//msg.topic = o;\n\nreturn msg;»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:550,»y»:540,»wires»:[[«4e8ab129ede2d0c1»]]},{«id»:»4e8ab129ede2d0c1″,»type»:»npm»,»z»:»4db8466d6f729d2d»,»name»:»geolib getCenter»,»func»:»// NPM module exposed as variable, npm_module\nreturn npm_module(msg.payload);»,»npm_module»:»geolib»,»module_style»:»function»,»msg_payload»:»return_val»,»function_name»:»getCenter»,»x»:860,»y»:480,»wires»:[[«6ac12f999db73576»]]},{«id»:»73c39d708c307235″,»type»:»worldmap»,»z»:»4db8466d6f729d2d»,»name»:»»,»lat»:»63.40727256711896″,»lon»:»10.797543830464987″,»zoom»:»11″,»layer»:»»,»cluster»:»»,»maxage»:»»,»usermenu»:»show»,»layers»:»show»,»panit»:»false»,»panlock»:»false»,»zoomlock»:»false»,»hiderightclick»:»false»,»coords»:»none»,»showgrid»:»false»,»path»:»/map»,»x»:1110,»y»:160,»wires»:[]},{«id»:»70c66165e663deb8″,»type»:»inject»,»z»:»4db8466d6f729d2d»,»name»:»trigger»,»props»:[{«p»:»payload»},{«p»:»topic»,»vt»:»str»}],»repeat»:»»,»crontab»:»»,»once»:false,»onceDelay»:0.1,»topic»:»»,»payload»:»»,»payloadType»:»date»,»x»:90,»y»:40,»wires»:[[«ce73a1239b607e09»]]},{«id»:»ce73a1239b607e09″,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»/github.com/tbmsp/trilateration»,»func»:»/*\n * This file is part of the Trilateration package.\n *\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @author Matias Gutierrez soporte@tbmsp.net\n * @file Trilateration.js\n *\n * Project home:\n * https://github.com/tbmsp/trilateration\n * \n * tn – finne ut logikken bak radiusverdi\n *\n */\n\n\nvar p1=[63.4262363, 10.693831,55];\nvar p2=[63.35171, 10.587022,72];\nvar p3=[63.374905, 10.811527,72.5];\nvar a=Compute(p1,p2,p3);\nconsole.log(a);\n\n\nlet arr1 = p1;\nlet arr2 = p2;\nlet arr3 = p3;\n\n\n\n// beregne distanse i km\n\nfunction computeDistance([prevLat, prevLon], [lat, lon]) {\n const prevLatInRad = toRad(prevLat);\n const prevLonInRad = toRad(prevLon);\n const latInRad = toRad(lat);\n const lonInRad = toRad(lon);\n\n return (\n // In kilometers\n 6377.830272 *\n Math.acos(\n Math.sin(prevLatInRad) * Math.sin(latInRad) +\n Math.cos(prevLatInRad) * Math.cos(latInRad) * Math.cos(lonInRad – prevLonInRad),\n )\n );\n}\n\nfunction toRad(angle) {\n return (angle * Math.PI) / 180;\n}\n\n\n\n\n\nconsole.log(\»dist: \» + computeDistance(arr1,arr2));\nconsole.log(\»dist: \» + computeDistance(arr1,arr3));\nconsole.log(\»dist: \» + computeDistance(arr2,arr3));\n\n\n\n\n\nfunction Compute(p1,p2,p3){\n var a;\n var b;\n var c;var d;\n var f;\n var g;\n var h;\n var i;\nvar j=3.14159265359;\nvar k;\nc=p2[0]-p1[0];\nd=p2[1]-p1[1];\nconsole.log(c);\nconsole.log(d);\nf=(180/j)Math.acos(Math.abs(c)/Math.abs(Math.sqrt(Math.pow(c,2)+Math.pow(d,2))));\nconsole.log(f);\nif((c>0&&d>0)){\n f=360-f;}else if((c<0&&d>0)){f=180+f;}else if((c<0&&d<0)){f=180-f;\n }\na=C(c,d,B(A(D(p2[2]))),f);\nb=C(p3[0]-p1[0],p3[1]-p1[1],B(A(D(p3[2]))),f);\ng=(Math.pow(B(A(D(p1[2]))),2)-Math.pow(a[2],2)+Math.pow(a[0],2))/(2a[0]);\nh=(Math.pow(B(A(D(p1[2]))),2)-Math.pow(b[2],2)-Math.pow(g,2)+Math.pow(g-b[0],2)+Math.pow(b[1],2))/(2b[1]);\ni=C(g,h,0,-f);\ni[0]=(i[0]+p1[0]) -0.0086;\nconsole.log(i[0]);\ni[1]=(i[1]+p1[1])-0.004; \nconsole.log(i[1])\nk=E(i[0],i[1],p1[0],p1[1]);\nconsole.log(k);\nif(k>p1[2]2){\n i=null;\n}else{\n if(i[0]<-90||i[0]>90||i[1]<-180||i[1]>180){i=null;\n }\n }\n return [i[0],i[1]];\n}\n\nfunction A(a){return a7.2;}\n\nfunction B(a){return a/900000;}\n\nfunction C(a,b,c,d){e=3.14159265359;return [aMath.cos((e/180)d)-bMath.sin((e/180)d),aMath.sin((e/180)d)+bMath.cos((e/180)d),c];}\n\nfunction D(a){return 730.24198315+52.33325511a+1.35152407Math.pow(a,2)+0.01481265Math.pow(a,3)+0.00005900Math.pow(a,4)+0.00541703180;}\n\nfunction E(a,b,c,d){var e=3.14159265359;var f=ea/180;var g=ec/180;var h=b-d;var i=eh/180;var j=Math.sin(f)Math.sin(g)+Math.cos(f)Math.cos(g)Math.cos(i);if(j>1){j=1;}j=Math.acos(j);j=j180/e;j=j601.1515;j=j1.609344;return j;}\nmsg.payload = a;\nmsg.p1 = p1;\nmsg.p2 = p2;\nmsg.p3 = p3;\nreturn msg;»,»outputs»:1,»noerr»:20,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:210,»y»:120,»wires»:[[«9eeeabb3b0cb151a»,»a0734bc382a8054c»,»c570e3f95545657b»,»bb20abac930944f1″,»981f74b968083e11″,»7aa7a0bcfbc5883f»,»39691b1dab96c5c3″,»248544938205a428″]]},{«id»:»9eeeabb3b0cb151a»,»type»:»debug»,»z»:»4db8466d6f729d2d»,»name»:»»,»active»:true,»tosidebar»:true,»console»:false,»tostatus»:false,»complete»:»true»,»targetType»:»full»,»statusVal»:»»,»statusType»:»auto»,»x»:450,»y»:40,»wires»:[]},{«id»:»a0734bc382a8054c»,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»person»,»func»:»\n\n\nmsg.payload = { name: \»person3\»,\n layer: \»trilat\»,\n lat: msg.payload[0],\n lon: msg.payload[1],\n icon: \»fa-circle\»,\n iconColor: \»blue\»,\n \n };\nreturn msg;\n»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:630,»y»:20,»wires»:[[«73c39d708c307235»]]},{«id»:»c570e3f95545657b»,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»gw1″,»func»:»\n\n\nmsg.payload = { name: \»gw1-trilat\»,\n layer: \»realtime2\»,\n lat: msg.p1[0],\n lon: msg.p1[1],\n iconColor: \»blue\»,\n icon: \»helicopter\»\n \n };\nreturn msg;\n\n\n»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:570,»y»:180,»wires»:[[«73c39d708c307235»]]},{«id»:»bb20abac930944f1″,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»gw2″,»func»:»\n\n\nmsg.payload = { name: \»gw2-trilat\»,\n layer: \»realtime2\»,\n lat: msg.p2[0],\n lon: msg.p2[1],\n iconColor: \»blue\»,\n icon: \»helicopter\»\n \n };\nreturn msg;\n\n»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:550,»y»:220,»wires»:[[«73c39d708c307235»]]},{«id»:»981f74b968083e11″,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»gw3″,»func»:»\n\n\nmsg.payload = { name: \»gw3-trilat\»,\n layer: \»realtime2\»,\n lat: msg.p3[0],\n lon: msg.p3[1],\n iconColor: \»blue\»,\n icon: \»helicopter\»\n \n };\nreturn msg;\n\n»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:570,»y»:260,»wires»:[[«73c39d708c307235»]]},{«id»:»7aa7a0bcfbc5883f»,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»gw1-radius»,»func»:»\n\n\nmsg.payload = { name: \»gw1rad\»,\n layer: \»radius\»,\n lat: msg.p1[0],\n lon: msg.p1[1],\n iconColor: \»yellow\»,\n radius: msg.p1[2] * 100,\n \n };\nreturn msg;\n»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:630,»y»:60,»wires»:[[«73c39d708c307235»]]},{«id»:»39691b1dab96c5c3″,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»gw1-radius»,»func»:»\n\n\nmsg.payload = { name: \»gw2rad\»,\n layer: \»radius\»,\n lat: msg.p2[0],\n lon: msg.p2[1],\n iconColor: \»yellow\»,\n radius: msg.p2[2] * 100,\n \n };\nreturn msg;\n»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:630,»y»:100,»wires»:[[«73c39d708c307235»]]},{«id»:»248544938205a428″,»type»:»function»,»z»:»4db8466d6f729d2d»,»name»:»gw1-radius»,»func»:»\n\n\nmsg.payload = { name: \»gw3rad\»,\n layer: \»radius\»,\n lat: msg.p3[0],\n lon: msg.p3[1],\n iconColor: \»yellow\»,\n radius: msg.p3[2] * 100,\n \n };\nreturn msg;\n»,»outputs»:1,»noerr»:0,»initialize»:»»,»finalize»:»»,»libs»:[],»x»:630,»y»:140,»wires»:[[«73c39d708c307235»]]},{«id»:»bff49b98112f9692″,»type»:»debug»,»z»:»4db8466d6f729d2d»,»name»:»debug 2″,»active»:true,»tosidebar»:true,»console»:false,»tostatus»:false,»complete»:»false»,»statusVal»:»»,»statusType»:»auto»,»x»:820,»y»:400,»wires»:[]}]
